○　ブートストラップ
AngularにおいてモジュールはNgModuleで表す
全てのAngularアプリケーションは最低1つのモジュールをもち、AppModuleと呼ばれる
@ngModuleのメタデータは下記が有名どころ
・declarations
・imports
・exports
・providers
・bootstrap

全てのコンポーネント、ディレクティブ、パイプはどこかのモジュールのdeclarationsに属する必要がある
declarationsに登録されない、あるいは重複があるとエラーになる
宣言されたクラスは、モジュール内から見えるが、importsされなければ外のモジュールからは見えない
importsに入るのはNgModuleの参照のみ
クラスは当該クラスでエクスポートされ、クラスが属するモジュールにインポートされ、
モジュールのdeclarationsに定義されて使えるようになる

○　NgModule
@NgModuleアノテーションが付与されたクラスのこと
Angularのインジェクションとコンパイルに使われる
Angularアプリケーションは全てこのモジュールの組み合わせで出来る
AppModuleはあまり大きくせず、ある程度大きくなったら別モジュールに切り出すことで、
モジュール性を高められる

・よく使うモジュール
BlowserModule：
ブラウザで動かすために必要で、ルートモジュールに組み込む必要がある
NgIfなどの共通機能を持っているが、ルート以外のモジュールにはインポートしない
CommonModule：
NgIfとかの共通機能を提供するモジュール
基本的にフィーチャーモジュールはこっちをインポートする

・フィーチャーモジュール
絶対ではないが下記のような種類に属することが多い
＊ドメインフィーチャーモジュール(Domain feature module)
＊ルーテッドフィーチャーモジュール(Routed feature module)
＊ルーティングモジュール(Routing module)
＊サービスフィーチャーモジュール(Service feature module)
＊ウィジェットフィーチャーモジュール(Widget feature module)

モジュールの用途を絞ってそれ用の機能のみ提供するモジュールを切り出していくイメージ
フィーチャーモジュールがエクスポートしたクラスを、インポート側のモジュールで使用できる

○　エントリーコンポーネント
Angularに対して命令的にロードさせるコンポーネント
テンプレートの中で参照がないコンポーネントなどを登録する
・ブートストラップされるコンポーネント
・ルータが参照するコンポーネント
・動的生成するコンポーネント
とか
ルータのコンポーネントは自動的にentryComponentsに属する
宣言されたコンポーネントは必ずしも最終成果物に含まれるわけではない
使われないコンポーネントはモジュールをインポートしていても除外される
逆にエントリーコンポーネントに指定したコンポーネントとそのツリーは、
必ず最終成果物の中に入るので、アプリケーションのサイズを気にする場合は
気軽にエントリーコンポーネントしない方が良い
